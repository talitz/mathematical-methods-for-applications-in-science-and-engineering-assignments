a = [2,4,4,4,2];
b = [0,1,1,1,1]; #b[1] is not used
c = [1,1,1,1,0]; #c[n] is not used
f = [1.2,1.3,4.5,0.3,1.0];


# [ a(1)  c(1)                                  ] [  k(1)  ]   [  f(1)  ]
# [ b(2)  a(2)  c(2)                            ] [  k(2)  ]   [  f(2)  ]
# [       b(3)  a(3)  c(3)                      ] [        ]   [        ]
# [            ...   ...   ...                  ] [  ...   ] = [  ...   ]
# [                    ...    ...    ...        ] [        ]   [        ]
# [                        b(n-1) a(n-1) c(n-1) ] [ k(n-1) ]   [ f(n-1) ]
# [                                 b(n)  a(n)  ] [  k(n)  ]   [  f(n)  ]

# This is the implementation from Lecture 1 notes - Thomas Algorithm
# We used here the parameters at the same way they are presented in the lecture

n = length(f);
beta = zeros(n,1);
k = zeros(n,1);
g = zeros(n,1);
alpha = zeros(n,1);
det = zeros(n+2,1); #starts from -1,0,1,2,3,..,n

alpha[1] = a[1];
g[1] = f[1];
det[1] = 0.0; #f(-1) = 0
det[2] = 1.0 #f(0) = 1
det[3] = a[1]; #f(1) = a(1)

for i=2:1:n
    beta[i] = b[i]/alpha[i-1];
    alpha[i] = a[i] - beta[i]*c[i-1];
    g[i] = f[i] - beta[i] * g[i-1];
    det[i+2] = a[i]*det[i+1]-c[i-1]*b[i]*det[i];
end
k[n] = g[n] / alpha[n];
for j=n-1:-1:1
   k[j] = ( g[j] - c[j]*k[j+1] ) / alpha[j];
end
println("The solution for Ax=f is: X = ",k)
#println("det = ",det);
#println("det(A) = ",det[n+2]);
